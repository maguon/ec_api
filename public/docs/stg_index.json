{
  "swagger": "2.0",
  "info": {
    "description": "This a api docs",
    "version": "0.0.1",
    "title": "EC api docs",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/ec_api"
    }
  },
  "host": "stg.myxxjs.com:9911/api/",

  "tags": [
    {
      "name": "user",
      "description": "User base info api"
    },
    {
      "name": "userTypeMenu",
      "description": "UserMenuList base info api"
    },
    {
      "name": "brand",
      "description": "brand base info api"
    },
    {
      "name": "brandModel",
      "description": "brandModel base info api"
    },
    {
      "name": "category",
      "description": "category base info api"
    },
    {
      "name": "supplier",
      "description": "supplier base info api"
    },
    {
      "name": "app",
      "description": "app version"

    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "UserLogin",
        "description": "",
        "operationId": "UserLogin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user info info",
        "description": "",
        "operationId": "AddUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态（0-停用，1-可用）",
            "required": false,
            "type": "integer"
          },{
            "name": "realName",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "联系方式",
            "required": false,
            "type": "string"
          },{
            "name": "gender",
            "in": "query",
            "description": "性别（0-女，1-男）",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（99-超级管理员）",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update",
        "description": "update user info",
        "operationId": "update user info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/user/{userId}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update password",
        "description": "update user password",
        "operationId": "update user password by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User object that needs to be update to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/user/{userId}/type": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds user type and update",
        "description": "update user type",
        "operationId": "update user type by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "用户组别",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/status": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds user status and update",
        "description": "update user status",
        "operationId": "update user status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/typeMenu": {
      "post": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Add a new userTypeMenu info",
        "description": "",
        "operationId": "AddUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserMenuList"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Select userTypeMenu Info",
        "description": "Get userTypeMenu info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "typeId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/typeId/{typeId}/status": {
      "put": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Finds typeMenu status and update",
        "description": "update typeMenu status",
        "operationId": "update typeMenu status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "type unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/brand": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Add a new brand info",
        "description": "",
        "operationId": "Add brand",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Select brand Info",
        "description": "Get brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandName",
            "in": "query",
            "description": "brandName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brand info and update",
        "description": "update brand info",
        "operationId": "update brand info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandInfo",
            "in": "body",
            "description": "Brand object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}/status": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brand and update",
        "description": "update brand status",
        "operationId": "update brand status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}/del": {
      "delete": {
        "tags": [
          "brand"
        ],
        "summary": "Delete brand",
        "description": "Delete brand",
        "operationId": "Delete brand by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or brandId not found"
          }
        }
      }
    },

    "/user/{userId}/brandModel": {
      "post": {
        "tags": [
          "brandModel"
        ],
        "summary": "Add a new brandModel info",
        "description": "",
        "operationId": "Add brandModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"brandModelInfo",
            "description": "brandModel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandModel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "brandModel"
        ],
        "summary": "Select brandModel Info",
        "description": "Get brandModel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "query",
            "description": "brandModelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandModelName",
            "in": "query",
            "description": "brandModelName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/brandModel/{brandModelId}": {
      "put": {
        "tags": [
          "brandModel"
        ],
        "summary": "Finds brandModel info and update",
        "description": "update brandModel info",
        "operationId": "update brandModel info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelInfo",
            "in": "body",
            "description": "BrandModel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/brandModel/{brandModelId}/status": {
      "put": {
        "tags": [
          "brandModel"
        ],
        "summary": "Finds brandModel and update",
        "description": "update brandModel status",
        "operationId": "update brandModel status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/brandModel/{brandModelId}/del": {
      "delete": {
        "tags": [
          "brandModel"
        ],
        "summary": "Delete brandModel",
        "description": "Delete brandModel",
        "operationId": "Delete brandModel by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or brandModelId not found"
          }
        }
      }
    },

    "/user/{userId}/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new category info",
        "description": "",
        "operationId": "Add category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"categoryInfo",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Select category Info",
        "description": "Get category info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "categoryName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/category/{categoryId}": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds category info and update",
        "description": "update category info",
        "operationId": "update category info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryInfo",
            "in": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/category/{categoryId}/status": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds category and update",
        "description": "update category status",
        "operationId": "update category status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/category/{categoryId}/del": {
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete category",
        "description": "Delete category",
        "operationId": "Delete category by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or categoryId not found"
          }
        }
      }
    },

    "/user/{userId}/Supplier": {
      "post": {
        "tags": [
          "supplier"
        ],
        "summary": "Add a new supplier info",
        "description": "",
        "operationId": "Add supplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "Select supplier Info",
        "description": "Get supplier info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "typeId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/user/{userId}/app": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Query app info",
        "description": "GetApp",
        "operationId": "GetApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "appId",
            "description": "appId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "appType",
            "description": "app类型",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "deviceType",
            "description": "设备类型(1-安卓 2-苹果)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "status",
            "description": "状态(0:停用,1:启用)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "App not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "app"
        ],
        "summary": "Add a new app info",
        "description": "AddApp",
        "operationId": "AddApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app Info and update",
        "description": "Update app info",
        "operationId": "Update app info by appId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appInfo",
            "in": "body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}/status": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app status and update",
        "description": "Update app status",
        "operationId": "Update app status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(0:停用,1:启用)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}/del": {
      "delete": {
        "tags": [
          "app"
        ],
        "summary": "Delete app",
        "description": "Delete app",
        "operationId": "Delete app by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or appId not found"
          }
        }
      }
    }
  },
  "definitions": {
    "UserLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "userName",
        "realName",
        "password",
        "phone",
        "email",
        "gender",
        "status",
        "types"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "UserPut": {
      "type": "object",
      "required": [
        "userName",
        "realName",
        "email",
        "gender",
        "status",
        "types"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "Password": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Password"
      }
    },
    "UserMenuList": {
      "type": "object",
      "required": [
        "id",
        "typeName",
        "menuList",
        "remarks"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "typeName": {
          "type": "string"
        },
        "menuList": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/MenuListArray"
          }
        },
        "remarks": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UserMenuList"
      }
    },
    "MenuListArray": {
      "type": "object",
      "required": [
        "label",
        "icon",
        "link",
        "children",
        "usable"
      ],
      "properties": {
        "label": {
          "type": "String"
        },
        "icon": {
          "type": "String"
        },
        "link": {
          "type": "String"
        },
        "children": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/ChildrenArray"
          }
        },
        "usable": {
          "type": "String"
        }
      },
      "xml": {
        "name": "MenuListArray"
      }
    },
    "ChildrenArray": {
      "type": "object",
      "required": [
        "link",
        "name",
        "usable"
      ],
      "properties": {
        "link": {
          "type": "String"
        },
        "name": {
          "type": "String"
        },
        "usable": {
          "type": "String"
        }
      },
      "xml": {
        "name": "ChildrenArray"
      }
    },
    "Brand": {
      "type": "object",
      "required": [
        "remark",
        "brandName"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Brand"
      }
    },
    "BrandModel": {
      "type": "object",
      "required": [
        "remark",
        "brandModelName",
        "brandId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "brandModelName": {
          "type": "string"
        },
        "brandId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "BrandModel"
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "remark",
        "categoryName"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Supplier": {
      "type": "object",
      "required": [
        "remark",
        "supplierName",
        "supplierType",
        "contactName",
        "email",
        "tel",
        "mobile",
        "fax",
        "address",
        "invoiceTitle",
        "invoiceBank",
        "invoiceBankSer",
        "invoiceAddress",
        "settleType",
        "settleMonthDay"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "supplierType": {
          "type": "integer",
          "format": "int64"
        },
        "contactName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "invoice_title": {
          "type": "string"
        },
        "invoice_bank": {
          "type": "string"
        },
        "invoice_bank_ser": {
          "type": "string"
        },
        "invoice_address": {
          "type": "string"
        },
        "settle_type": {
          "type": "string"
        },
        "settle_month_day": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Supplier"
      }
    },
    "App": {
      "type": "object",
      "required": [
        "appType",
        "deviceType",
        "version",
        "versionNum",
        "minVersionNum",
        "forceUpdate",
        "url",
        "remarks"
      ],
      "properties": {
        "appType": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "deviceType": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "version": {
          "type": "string"
        },
        "versionNum": {
          "type": "integer",
          "format": "int64"
        },
        "minVersionNum": {
          "type": "integer",
          "format": "int64"
        },
        "forceUpdate": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "description": "pet status in the store"
        },
        "remarks": {
          "type": "string"
        }
      },
      "xml": {
        "name": "App"
      }
    }
  }
}