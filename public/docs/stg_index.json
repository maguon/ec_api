{
  "swagger": "2.0",
  "info": {
    "description": "This a api docs",
    "version": "0.0.1",
    "title": "EC api docs",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "View source at github",
      "url": "https://github.com/maguon/ec_api"
    }
  },
  "host": "stg.myxxjs.com:9911/api/",

  "tags": [
    {
      "name": "user",
      "description": "User base info api"
    },
    {
      "name": "userTypeMenu",
      "description": "UserTypeMenu base info api"
    },
    {
      "name": "brand",
      "description": "brand base info api"
    },
    {
      "name": "category",
      "description": "category base info api"
    },
    {
      "name": "storage",
      "description": "storage base info api"
    },
    {
      "name": "supplier",
      "description": "supplier base info api"
    },
    {
      "name": "product",
      "description": "product base info api"
    },
    {
      "name": "purchase",
      "description": "purchase base info api"
    },
    {
      "name": "client",
      "description": "client base info api"
    },
    {
      "name": "service",
      "description": "service base info api"
    },
    {
      "name": "order",
      "description": "order base info api"
    },
    {
      "name": "app",
      "description": "app version"
    },
    {
      "name": "statistics",
      "description": "statistics version"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "UserLogin",
        "description": "",
        "operationId": "UserLogin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/phone/{phone}/passwordSms": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "send reg phone passwordSms（忘记密码）",
        "description": "Send reg phone passwordSms",
        "operationId": "send Reg Phone passwordSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/phone/{phone}/changePhoneSms": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "send reg phone changePhoneSms（更换手机号）",
        "description": "Send reg phone changePhoneSms",
        "operationId": "send Reg Phone changePhoneSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user info info",
        "description": "",
        "operationId": "AddUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "query",
            "description": "用户ID",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "type": "integer"
          },{
            "name": "realName",
            "in": "query",
            "description": "真实姓名",
            "required": false,
            "type": "string"
          },{
            "name": "phone",
            "in": "query",
            "description": "联系方式",
            "required": false,
            "type": "string"
          },{
            "name": "gender",
            "in": "query",
            "description": "性别（0-女，1-男）",
            "required": false,
            "type": "integer"
          },{
            "name": "type",
            "in": "query",
            "description": "用户类型（99-超级管理员）",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Select user Info",
        "description": "Get user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update",
        "description": "update user info",
        "operationId": "update user info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "userInfo",
            "in": "body",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/user/{userId}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds userInfo and update password",
        "description": "update user password",
        "operationId": "update user password by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User object that needs to be update to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "AdminUserId not found"
          }
        }
      }
    },
    "/phone/{phone}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "reset user password（根据电话验证码，更新密码）",
        "description": "reset update password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordAndCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/phone/{phone}/changePhone": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "reset user changePhone（根据电话验证码，更新手机号）",
        "description": "reset update changePhone",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "description": "user phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "changePhone",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhoneAndCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/PhoneAndCode"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/type": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds user type and update",
        "description": "update user type",
        "operationId": "update user type by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "用户组别",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/status": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Finds user status and update",
        "description": "update user status",
        "operationId": "update user status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/typeMenu": {
      "post": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Add a new userTypeMenu info",
        "description": "",
        "operationId": "AddUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserMenuList"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Select userTypeMenu Info",
        "description": "Get userTypeMenu info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "typeId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/typeId/{typeId}/status": {
      "put": {
        "tags": [
          "userTypeMenu"
        ],
        "summary": "Finds typeMenu status and update",
        "description": "update typeMenu status",
        "operationId": "update typeMenu status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "type unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/brandFile": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "user upload brandFile ",
        "description": "user upload brandFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/brand": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Add a new brand info",
        "description": "",
        "operationId": "Add brand",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"userInfo",
            "description": "User object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Select brand Info",
        "description": "Get brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandName",
            "in": "query",
            "description": "brandName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brand info and update",
        "description": "update brand info",
        "operationId": "update brand info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandInfo",
            "in": "body",
            "description": "Brand object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "brand"
        ],
        "summary": "Delete brand",
        "description": "Delete brand",
        "operationId": "Delete brand by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or brandId not found"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}/status": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brand and update",
        "description": "update brand status",
        "operationId": "update brand status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/brandModel": {
      "post": {
        "tags": [
          "brand"
        ],
        "summary": "Add a new brandModel info",
        "description": "",
        "operationId": "Add brandModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"brandModelInfo",
            "description": "brandModel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandModel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "brand"
        ],
        "summary": "Select brandModel Info",
        "description": "Get brandModel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "query",
            "description": "brandModelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandModelName",
            "in": "query",
            "description": "brandModelName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/brandModel/{brandModelId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brandModel info and update",
        "description": "update brandModel info",
        "operationId": "update brandModel info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelInfo",
            "in": "body",
            "description": "BrandModel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrandModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "brand"
        ],
        "summary": "Delete brandModel",
        "description": "Delete brandModel",
        "operationId": "Delete brandModel by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or brandModelId not found"
          }
        }
      }
    },
    "/user/{userId}/brandModel/{brandModelId}/status": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Finds brandModel and update",
        "description": "update brandModel status",
        "operationId": "update brandModel status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "path",
            "description": "brandModel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/categoryFile": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "user upload categoryFile ",
        "description": "user upload categoryFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new category info",
        "description": "",
        "operationId": "Add category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"categoryInfo",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Select category Info",
        "description": "Get category info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "categoryName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/category/{categoryId}": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds category info and update",
        "description": "update category info",
        "operationId": "update category info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryInfo",
            "in": "body",
            "description": "Category object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete category",
        "description": "Delete category",
        "operationId": "Delete category by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or categoryId not found"
          }
        }
      }
    },
    "/user/{userId}/category/{categoryId}/status": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds category and update",
        "description": "update category status",
        "operationId": "update category status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "category unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/categorySub": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Add a new categorySub info",
        "description": "",
        "operationId": "Add categorySub",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"categorySubInfo",
            "description": "CategorySub object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategorySub"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "category"
        ],
        "summary": "Select categorySub Info",
        "description": "Get categorySub info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categorySubId",
            "in": "query",
            "description": "categorySubId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "categorySubName",
            "in": "query",
            "description": "categorySubName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/categorySub/{categorySubId}": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds categorySub info and update",
        "description": "update categorySub info",
        "operationId": "update categorySub info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categorySubId",
            "in": "path",
            "description": "categorySub unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categorySubInfo",
            "in": "body",
            "description": "CategorySub object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategorySub"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "category"
        ],
        "summary": "Delete categorySub",
        "description": "Delete categorySub",
        "operationId": "Delete categorySub by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categorySubId",
            "in": "path",
            "description": "categorySub Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or categorySubId not found"
          }
        }
      }
    },
    "/user/{userId}/categorySub/{categorySubId}/status": {
      "put": {
        "tags": [
          "category"
        ],
        "summary": "Finds categorySub and update",
        "description": "update categorySub status",
        "operationId": "update categorySub status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "categorySubId",
            "in": "path",
            "description": "categorySub unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storage": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storage info",
        "description": "",
        "operationId": "Add storage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageInfo",
            "description": "Storage object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Storage"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storage Info",
        "description": "Get storage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageName",
            "in": "query",
            "description": "storageName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storage info and update",
        "description": "update storage info",
        "operationId": "update storage info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageInfo",
            "in": "body",
            "description": "Storage object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Storage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "storage"
        ],
        "summary": "Delete storage",
        "description": "Delete storage",
        "operationId": "Delete storage by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "StorageId not found"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}/status": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storage and update",
        "description": "update storage status",
        "operationId": "update storage status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storageArea": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storageArea info",
        "description": "",
        "operationId": "Add storageArea",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageAreaInfo",
            "description": "StorageArea object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageArea"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageArea Info",
        "description": "Get storageArea info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaName",
            "in": "query",
            "description": "storageAreaName",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{storageAreaId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageArea info and update",
        "description": "update storageArea info",
        "operationId": "update storageArea info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "path",
            "description": "storageArea unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageAreaInfo",
            "in": "body",
            "description": "StorageArea object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "storage"
        ],
        "summary": "Delete storageArea",
        "description": "Delete storageArea",
        "operationId": "Delete storageArea by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "path",
            "description": "storageArea Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "StorageAreaId not found"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{storageAreaId}/status": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageArea and update",
        "description": "update storageArea status",
        "operationId": "update storageArea status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "path",
            "description": "storageArea unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storageProductRel": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageProductRel Info",
        "description": "Get storageProductRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "query",
            "description": "storageProductRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "oldFlag",
            "in": "query",
            "description": "oldFlag",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageProductRel.csv": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageProductRel csv ",
        "description": "Get storageProductRel csv ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "query",
            "description": "storageProductRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "oldFlag",
            "in": "query",
            "description": "oldFlag",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}/product/{productId}/storageProductRel": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storageProductRel info ",
        "description": "",
        "operationId": "Add storageProductRel info ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storageId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageProductRelInfo",
            "description": "StorageProductRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageProductRel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/storageProductRel/{storageProductRelId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageProductRel info and update",
        "description": "update storageProductRel info",
        "operationId": "update storageProductRel info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "path",
            "description": "storageProductRel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRel",
            "in": "body",
            "description": "storageProductRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageProductRelPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/storageProductRel/{storageProductRelId}/storageMove": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageProductRel  storageMove and update",
        "description": "update storageProductRel storageMove",
        "operationId": "update storageProductRel storageMove by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "path",
            "description": "storageProductRel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageMoveInfo",
            "in": "body",
            "description": "storageProductRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageMoveInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storageProductRelDetail": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageProductRelDetail Info",
        "description": "Get storageProductRelDetail info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "applyUserId",
            "in": "query",
            "description": "applyUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageProductRelDetailId",
            "in": "query",
            "description": "storageProductRelDetailId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "query",
            "description": "storageProductRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageType",
            "in": "query",
            "description": "storageType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageSubType",
            "in": "query",
            "description": "storageSubType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderProdId",
            "in": "query",
            "description": "orderProdId",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageProductRelDetail.csv": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageProductRelDetail.csv Info",
        "description": "Get storageProductRelDetail.csv info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelDetailId",
            "in": "query",
            "description": "storageProductRelDetailId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "query",
            "description": "storageProductRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageType",
            "in": "query",
            "description": "storageType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageSubType",
            "in": "query",
            "description": "storageSubType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageProductRel/{storageProductRelId}/storProdRelDetailImport": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storProdRelDetailImport info ",
        "description": "Add storProdRelDetailImport info",
        "operationId": "Add storProdRelDetailImport info ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "path",
            "description": "storageProductRelId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storProdRelDetailImport",
            "description": "storProdRelDetailImport object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storProdRelDetailImport"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/storageProductRel/{storageProductRelId}/storProdRelDetailExport": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storProdRelDetailExport info ",
        "description": "Add storProdRelDetailExport info",
        "operationId": "Add storProdRelDetailExport info ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "path",
            "description": "storageProductRelId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storProdRelDetailExport",
            "description": "storProdRelDetailExport object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storProdRelDetailExport"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/user/{userId}/storageCheck": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storageCheck info",
        "description": "",
        "operationId": "Add storageCheck info ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageCheckInfo",
            "description": "StorageCheck object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCheck"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageCheck Info",
        "description": "Get storageCheck info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckId",
            "in": "query",
            "description": "storageCheckId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkStatus",
            "in": "query",
            "description": "checkStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageCheck/{storageCheckId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageCheck info and update",
        "description": "update storageCheck info",
        "operationId": "update storageCheck info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckId",
            "in": "path",
            "description": "storageCheck unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckInfo",
            "in": "body",
            "description": "StorageCheck object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCheckPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/storageCheck/{storageCheckId}/status": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageCheck and update",
        "description": "update storageCheck status",
        "operationId": "update storageCheck status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckId",
            "in": "path",
            "description": "storageCheck unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态(1:未完成2:已完成)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storageCheckRel": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "Add a new storageCheckRel info",
        "description": "",
        "operationId": "Add storageCheckRel info ",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageCheckRelInfo",
            "description": "StorageCheckRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCheckRel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageCheckRel Info",
        "description": "Get storageCheckRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckRelId",
            "in": "query",
            "description": "storageCheckRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageCheckId",
            "in": "query",
            "description": "storageCheckId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkStatus",
            "in": "query",
            "description": "checkStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageCheck/{storageCheckId}/storageCheckRel.csv": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageCheckRel.csv",
        "description": "Get storageCheckRel.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckId",
            "in": "path",
            "description": "storageCheckId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageCheckRel/{storageCheckRelId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "Finds storageCheckRel info and update",
        "description": "update storageCheckRel info",
        "operationId": "update storageCheckRel info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckRelId",
            "in": "path",
            "description": "storageCheckRel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageCheckRelInfo",
            "in": "body",
            "description": "StorageCheckRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageCheckRelPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/storageProductRelStat": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageProductRel Stat",
        "description": "Get storageProductRel Stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/storageCheckStat": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Select storageCheck Stat",
        "description": "Get storageCheck Stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkStatus",
            "in": "query",
            "description": "checkStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/user/{userId}/supplier": {
      "post": {
        "tags": [
          "supplier"
        ],
        "summary": "Add a new supplier info",
        "description": "",
        "operationId": "Add supplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"supplierInfo",
            "description": "supplier object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "supplier"
        ],
        "summary": "Select supplier Info",
        "description": "Get supplier info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierName",
            "in": "query",
            "description": "supplierName",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplierType",
            "in": "query",
            "description": "supplierType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/supplier/{supplierId}": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "Finds supplier info and update",
        "description": "update supplier info",
        "operationId": "update supplier info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplier unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierInfo",
            "in": "body",
            "description": "Supplier object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "supplier"
        ],
        "summary": "Delete supplier",
        "description": "Delete supplier",
        "operationId": "Delete supplier by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplier Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "SupplierId not found"
          }
        }
      }
    },
    "/user/{userId}/supplier/{supplierId}/status": {
      "put": {
        "tags": [
          "supplier"
        ],
        "summary": "Finds supplier and update",
        "description": "update supplier status",
        "operationId": "update supplier status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "supplier unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/product": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add a new product info",
        "description": "",
        "operationId": "Add product",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"productInfo",
            "description": "product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Select product Info",
        "description": "Get product info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productName",
            "in": "query",
            "description": "productName",
            "required": false,
            "type": "string"
          },
          {
            "name": "productSName",
            "in": "query",
            "description": "productSName",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "categoryId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "categorySubId",
            "in": "query",
            "description": "categorySubId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brandId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "brandModelId",
            "in": "query",
            "description": "brandModelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "standardType",
            "in": "query",
            "description": "standardType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/product/{productId}": {
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Finds product info and update",
        "description": "update product info",
        "operationId": "update product info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "product unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productInfo",
            "in": "body",
            "description": "Product object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete product",
        "description": "Delete product",
        "operationId": "Delete product by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "product Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "ProductId not found"
          }
        }
      }
    },
    "/user/{userId}/product/{productId}/status": {
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Finds product and update",
        "description": "update product status",
        "operationId": "update product status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "product unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/purchase": {
      "post": {
        "tags": [
          "purchase"
        ],
        "summary": "Add a new purchase info",
        "description": "",
        "operationId": "Add purchase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"purchaseInfo",
            "description": "purchase object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchase Info",
        "description": "Get purchase info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateStart",
            "in": "query",
            "description": "planDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateEnd",
            "in": "query",
            "description": "planDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateStart",
            "in": "query",
            "description": "finishDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateEnd",
            "in": "query",
            "description": "finishDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateStart",
            "in": "query",
            "description": "paymentDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateEnd",
            "in": "query",
            "description": "paymentDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchase info and update",
        "description": "update purchase info",
        "operationId": "update purchase info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "purchase unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseInfo",
            "in": "body",
            "description": "Purchase object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchasePut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}/storageStatus": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds Purchase and update storageStatus",
        "description": "update Purchase storageStatus",
        "operationId": "update Purchase storageStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "仓储状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}/paymentStatus": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds Purchase and update paymentStatus",
        "description": "update Purchase paymentStatus",
        "operationId": "update Purchase paymentStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "付款状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}/status": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds Purchase and update",
        "description": "update Purchase status",
        "operationId": "update Purchase status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchaseAndItem": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchase Info",
        "description": "Get purchase info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateStart",
            "in": "query",
            "description": "planDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateEnd",
            "in": "query",
            "description": "planDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateStart",
            "in": "query",
            "description": "finishDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateEnd",
            "in": "query",
            "description": "finishDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateStart",
            "in": "query",
            "description": "paymentDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateEnd",
            "in": "query",
            "description": "paymentDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "itemStatus",
            "in": "query",
            "description": "itemStatus",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/user/{userId}/purchaseItem": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseItem Info",
        "description": "Get purchaseItem info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchaseItemStorage": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseItemStorage Info",
        "description": "Get purchaseItemStorage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchaseItem/{purchaseItemId}": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseItem info and update",
        "description": "update purchaseItem info",
        "operationId": "update purchaseItem info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "path",
            "description": "purchaseItem unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemInfo",
            "in": "body",
            "description": "PurchaseItem object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseItemPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}/purchaseItem/{purchaseItemId}/storageStatus": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseItem and update storageStatus",
        "description": "update purchaseItem storageStatus",
        "operationId": "update purchaseItem storageStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "Purchase unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "path",
            "description": "PurchaseItem unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageInfo",
            "description": "storageInfo object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/purchaseItemPutStorage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/purchaseRefund": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseRefund Info",
        "description": "Get purchaseRefund info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundId",
            "in": "query",
            "description": "purchaseRefundId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundStorageFlag",
            "in": "query",
            "description": "仓库退货状态(1:未退货，2:已退货)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageType",
            "in": "query",
            "description": "需要出库(0:不出库,1:出库)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "transferCostType",
            "in": "query",
            "description": "运费类型(1:对方支付,2:我方支付)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchase/{purchaseId}/purchaseItem/{purchaseItemId}/purchaseRefund": {
      "post": {
        "tags": [
          "purchase"
        ],
        "summary": "Add a new purchaseRefund info",
        "description": "",
        "operationId": "Add purchaseRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "path",
            "description": "purchaseId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "path",
            "description": "purchaseItemId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"purchaseRefundInfo",
            "description": "purchaseRefund object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseRefund"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/purchaseItem/{purchaseItemId}/purchaseRefund/{purchaseRefundId}": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseRefund info and update",
        "description": "update purchaseRefund info",
        "operationId": "update purchaseRefund info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundId",
            "in": "path",
            "description": "purchaseRefund unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "path",
            "description": "purchaseItemId unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundInfo",
            "in": "body",
            "description": "PurchaseRefund object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PurchaseRefundPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchaseRefund/{purchaseRefundId}/paymentStatus": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseRefund and update paymentStatus",
        "description": "update purchaseRefund paymentStatus",
        "operationId": "update purchaseRefund paymentStatus by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundId",
            "in": "path",
            "description": "purchaseRefundId unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "付款状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchaseRefund/{purchaseRefundId}/status": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseRefund and update",
        "description": "update purchaseRefund status",
        "operationId": "update purchaseRefund status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundId",
            "in": "path",
            "description": "PurchaseRefundId unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/purchaseRefund/{purchaseRefundId}/storageProductRel/{storageProductRelId}/refundStorage": {
      "put": {
        "tags": [
          "purchase"
        ],
        "summary": "Finds purchaseRefund storage and update ",
        "description": "update purchaseRefund storage and update ",
        "operationId": "update purchaseRefund storage by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseRefundId",
            "in": "path",
            "description": "PurchaseRefundId unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "path",
            "description": "storageProductRel unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"storageInfo",
            "description": "storageInfo object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Remark"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/purchaseStat": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseStat",
        "description": "Get purchaseStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateStart",
            "in": "query",
            "description": "planDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "planDateEnd",
            "in": "query",
            "description": "planDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateStart",
            "in": "query",
            "description": "finishDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finishDateEnd",
            "in": "query",
            "description": "finishDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateStart",
            "in": "query",
            "description": "paymentDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentDateEnd",
            "in": "query",
            "description": "paymentDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchaseItemStat": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseItemStat",
        "description": "Get purchaseItemStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/purchaseRefundStat": {
      "get": {
        "tags": [
          "purchase"
        ],
        "summary": "Select purchaseRefund Stat",
        "description": "Get purchaseRefund Stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseItemId",
            "in": "query",
            "description": "purchaseItemId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "refundStorageFlag",
            "in": "query",
            "description": "仓库退货状态(1:未退货，2:已退货)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageType",
            "in": "query",
            "description": "需要出库(0:不出库,1:出库)",
            "required": false,
            "type": "integer"
          },
          {
            "name": "transferCostType",
            "in": "query",
            "description": "运费类型(1:对方支付,2:我方支付)",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },

    "/user/{userId}/client": {
      "post": {
        "tags": [
          "client"
        ],
        "summary": "Add a new client info",
        "description": "",
        "operationId": "Add client",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"clientInfo",
            "description": "client object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Select client Info",
        "description": "Get client info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "tel",
            "in": "query",
            "description": "tel",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientSerial",
            "in": "query",
            "description": "clientSerial",
            "required": false,
            "type": "string"
          },
          {
            "name": "clientSerialDetail",
            "in": "query",
            "description": "clientSerialDetail",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "referUser",
            "in": "query",
            "description": "referUser",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/client/{clientId}": {
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Finds client info and update",
        "description": "update client info",
        "operationId": "update client info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "client unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientInfo",
            "in": "body",
            "description": "client object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/client/{clientId}/status": {
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Finds client and update",
        "description": "update client status",
        "operationId": "update client status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "client unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/clientAgent": {
      "post": {
        "tags": [
          "client"
        ],
        "summary": "Add a new clientAgent info",
        "description": "",
        "operationId": "Add clientAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"clientAgentInfo",
            "description": "clientAgent object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientAgent"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Select clientAgent Info",
        "description": "Get clientAgent info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientType",
            "in": "query",
            "description": "clientType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "idSerial",
            "in": "query",
            "description": "idSerial",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateIdStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateIdEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/clientAgent/{clientAgentId}": {
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Finds clientAgent info and update",
        "description": "update clientAgent info",
        "operationId": "update clientAgent info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "path",
            "description": "clientAgent unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgent",
            "in": "body",
            "description": "clientAgent object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/clientAgent/{clientAgentId}/status": {
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Finds clientAgent and update",
        "description": "update clientAgent status",
        "operationId": "update clientAgent status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "path",
            "description": "clientAgent unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/clientAgentInvoice": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Select clientAgentInvoice Info",
        "description": "Get clientAgentInvoice info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentInvoiceId",
            "in": "query",
            "description": "clientAgentInvoiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "invoiceType",
            "in": "query",
            "description": "invoiceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "settleType",
            "in": "query",
            "description": "settleType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/clientAgent/{clientAgentId}/clientAgentInvoice": {
      "post": {
        "tags": [
          "client"
        ],
        "summary": "Add a new clientAgentInvoice info",
        "description": "",
        "operationId": "Add clientAgentInvoice info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "path",
            "description": "clientAgentId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"clientAgentInvoiceInfo",
            "description": "clientAgentInvoice object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientAgentInvoice"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/clientAgentInvoice/{clientAgentInvoiceId}": {
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Finds clientAgentInvoice and update",
        "description": "Update clientAgentInvoice",
        "operationId": "Update clientAgentInvoice by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentInvoiceId",
            "in": "path",
            "description": "clientAgentInvoice unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "clientAgentInvoice",
            "in": "body",
            "description": "clientAgentInvoice object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientAgentInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/saleService": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Add a new saleService info",
        "description": "",
        "operationId": "Add saleService info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"saleServiceInfo",
            "description": "saleService object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaleService"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "service"
        ],
        "summary": "Select saleService Info",
        "description": "Get saleService info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "query",
            "description": "saleServiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceType",
            "in": "query",
            "description": "serviceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "servicePriceType",
            "in": "query",
            "description": "servicePriceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "serviceCostType",
            "in": "query",
            "description": "serviceCostType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "salePerfType",
            "in": "query",
            "description": "salePerfType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deployPerfType",
            "in": "query",
            "description": "deployPerfType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkPerfType",
            "in": "query",
            "description": "checkPerfType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/saleService/{saleServiceId}": {
      "put": {
        "tags": [
          "service"
        ],
        "summary": "Finds saleService Info and update",
        "description": "Update saleService info",
        "operationId": "Update saleService info by saleServiceId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "path",
            "description": "saleService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceInfo",
            "in": "body",
            "description": "SaleService object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaleService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SaleService"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "SaleServiceId not found"
          }
        }
      }
    },
    "/user/{userId}/saleService/{saleServiceId}/status": {
      "put": {
        "tags": [
          "service"
        ],
        "summary": "Finds service and update",
        "description": "update service status",
        "operationId": "update service status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "path",
            "description": "saleService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/saleServiceProdRel": {
      "get": {
        "tags": [
          "service"
        ],
        "summary": "Select saleServiceProdRel Info",
        "description": "Get saleServiceProdRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "query",
            "description": "saleServiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/saleService/{saleServiceId}/product/{productId}": {
      "post": {
        "tags": [
          "service"
        ],
        "summary": "Add a new saleServiceProdRel info",
        "description": "",
        "operationId": "Add saleServiceProdRel info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "path",
            "description": "saleServiceId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"saleServiceProdRelInfo",
            "description": "saleServiceProdRel object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaleServiceProdRel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "service"
        ],
        "summary": " Delete SaleServiceProdRel",
        "description": " Delete SaleServiceProdRel ",
        "operationId": " Delete SaleServiceProdRel by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "path",
            "description": "saleServiceId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "productId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "SaleServiceProdRelId not found"
          }
        }
      }
    },

    "/user/{userId}/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add a new order info",
        "description": "",
        "operationId": "Add order info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Select order Info",
        "description": "Get order info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "reUserId",
            "in": "query",
            "description": "reUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "orderType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkUserId",
            "in": "query",
            "description": "checkUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientTel",
            "in": "query",
            "description": "clientTel",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientSerial",
            "in": "query",
            "description": "clientSerial",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "modelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "dateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "dateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateStart",
            "in": "query",
            "description": "finDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateEnd",
            "in": "query",
            "description": "finDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/order.csv": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Select order csv ",
        "description": "Get order csv ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "reUserId",
            "in": "query",
            "description": "reUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "orderType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkUserId",
            "in": "query",
            "description": "checkUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientTel",
            "in": "query",
            "description": "clientTel",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientSerial",
            "in": "query",
            "description": "clientSerial",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "modelId",
            "in": "query",
            "description": "modelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "dateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "dateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateStart",
            "in": "query",
            "description": "finDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateEnd",
            "in": "query",
            "description": "finDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Finds order and update ",
        "description": "update order info ",
        "operationId": "update order info by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "order unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/status": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Finds order and update",
        "description": "update order status",
        "operationId": "update order status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "order unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/order/{orderId}/orderItemProd": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add a new orderItemProd info",
        "description": "",
        "operationId": "Add orderItemProd info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderItemProdInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderItemProd"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/orderItemProd": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Select orderItemProd Info",
        "description": "Get orderItemProd info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemProdId",
            "in": "query",
            "description": "orderItemProdId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "saleUserId",
            "in": "query",
            "description": "saleUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderItemType",
            "in": "query",
            "description": "orderItemType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "prodId",
            "in": "query",
            "description": "prodId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "dateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "dateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/orderItemProdStorage": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Select orderItemProdStorage Info",
        "description": "Get orderItemProdStorage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemProdId",
            "in": "query",
            "description": "orderItemProdId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "saleUserId",
            "in": "query",
            "description": "saleUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderItemType",
            "in": "query",
            "description": "orderItemType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "prodId",
            "in": "query",
            "description": "prodId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderDateStart",
            "in": "query",
            "description": "orderDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderDateEnd",
            "in": "query",
            "description": "orderDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storageId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageAreaId",
            "in": "query",
            "description": "storageAreaId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "storageProductRelId",
            "in": "query",
            "description": "storageProductRelId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "supplierId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "purchaseId",
            "in": "query",
            "description": "purchaseId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "applyUserId",
            "in": "query",
            "description": "applyUserId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/orderItemProd/{orderItemProdId}": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": " Finds orderItemProd and update ",
        "description": " update orderItemProd info ",
        "operationId": " update orderItemProd info by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemProdId",
            "in": "path",
            "description": "orderItemProd unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderItemProdPut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/orderItemProd/{orderItemProdId}/status": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Finds orderItemProd and update",
        "description": "update orderItemProd status",
        "operationId": "update orderItemProd status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemProdId",
            "in": "path",
            "description": "orderItemProd unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/orderItemProd/{orderItemProdId}": {
      "delete": {
        "tags": [
          "order"
        ],
        "summary": " Delete orderItemProd",
        "description": " Delete orderItemProd ",
        "operationId": " Delete orderItemProd  by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemProdId",
            "in": "path",
            "description": "orderItemProdId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "orderItemProdId not found"
          }
        }
      }
    },

    "/user/{userId}/order/{orderId}/orderItemService": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add a new orderItemService info",
        "description": "",
        "operationId": "Add orderItemService info",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderItemServiceInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderItemService"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/user/{userId}/orderItemService": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Select orderItemService Info",
        "description": "Get orderItemService info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "query",
            "description": "orderItemServiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"
          },
          {
            "name": "saleUserId",
            "in": "query",
            "description": "saleUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "deployUserId",
            "in": "query",
            "description": "deployUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "checkUserId",
            "in": "query",
            "description": "checkUserId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "orderId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "clientAgentId",
            "in": "query",
            "description": "clientAgentId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "saleServiceId",
            "in": "query",
            "description": "saleServiceId",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "dateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "dateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateStart",
            "in": "query",
            "description": "finDateStart",
            "required": false,
            "type": "integer"
          },
          {
            "name": "finDateEnd",
            "in": "query",
            "description": "finDateEnd",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/orderItemService/{orderItemServiceId}": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": " Finds orderItemService and update ",
        "description": " update orderItemService info ",
        "operationId": " update orderItemService info by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "path",
            "description": "orderItemService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderInfo",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderItemServicePut"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/orderItemService/{orderItemServiceId}/deploy": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": " Finds orderItemService deploy update ",
        "description": " update orderItemService deploy ",
        "operationId": " update orderItemService deploy by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "path",
            "description": "orderItemService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderDeploy",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderServiceDeploy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/orderItemService/{orderItemServiceId}/check": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": " Finds orderItemService check update ",
        "description": " update orderItemService check ",
        "operationId": " update orderItemService check by id ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "path",
            "description": "orderItemService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"orderDeploy",
            "description": "order object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderServiceCheck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/orderItemService/{orderItemServiceId}/status": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Finds orderItemService and update",
        "description": "update orderItemService status",
        "operationId": "update orderItemService status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "path",
            "description": "orderItemService unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{userId}/order/{orderId}/orderItemService/{orderItemServiceId}": {
      "delete": {
        "tags": [
          "order"
        ],
        "summary": " Delete orderItemService ",
        "description": " Delete orderItemService ",
        "operationId": " Delete orderItemService by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "orderId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderItemServiceId",
            "in": "path",
            "description": "orderItemServiceId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "orderItemServiceId not found"
          }
        }
      }
    },

    "/user/{userId}/app": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Query app info",
        "description": "GetApp",
        "operationId": "GetApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "appId",
            "description": "appId",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "appType",
            "description": "app类型",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "deviceType",
            "description": "设备类型(1-安卓 2-苹果)",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "status",
            "description": "状态",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "App not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "app"
        ],
        "summary": "Add a new app info",
        "description": "AddApp",
        "operationId": "AddApp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name":"body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app Info and update",
        "description": "Update app info",
        "operationId": "Update app info by appId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appInfo",
            "in": "body",
            "description": "App object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/App"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId not found"
          }
        }
      },
      "delete": {
        "tags": [
          "app"
        ],
        "summary": "Delete app",
        "description": "Delete app",
        "operationId": "Delete app by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app Id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params "
          },
          "404": {
            "description": "UserId or appId not found"
          }
        }
      }
    },
    "/user/{userId}/app/{appId}/status": {
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Finds app status and update",
        "description": "Update app status",
        "operationId": "Update app status by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "appId",
            "in": "path",
            "description": "app unique id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/App"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/user/{userId}/statPurchaseByMonth": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statPurchaseByMonth",
        "description": "Get statPurchaseByMonth",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/statPurchaseByDay": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statPurchaseByDay",
        "description": "Get statPurchaseByDay",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "storageStatus",
            "in": "query",
            "description": "storageStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "paymentStatus",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/statClientByMonth": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statClientByMonth",
        "description": "Get statClientByMonth",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/statClientByDay": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statClientByDay",
        "description": "Get statClientByDay",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sourceType",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/statOrderByMonth": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statOrderByMonth",
        "description": "Get statOrderByMonth",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "orderType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    },
    "/user/{userId}/statOrderByDay": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Select statOrderByDay",
        "description": "Get statOrderByDay",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "orderType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "description": "sourceType",
            "required": false,
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "start",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid params"
          }
        }
      }
    }

  },
  "definitions": {
    "UserLogin": {
      "type": "object",
      "required": [
        "userName",
        "password"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "User": {
      "type": "object",
      "required": [
        "userName",
        "realName",
        "password",
        "phone",
        "email",
        "gender",
        "status",
        "types"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "UserPut": {
      "type": "object",
      "required": [
        "userName",
        "realName",
        "email",
        "gender",
        "status",
        "types"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "enum": [
            0,
            1
          ]
        },
        "type": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "Password": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Password"
      }
    },
    "PasswordAndCode": {
      "type": "object",
      "required": [
        "code",
        "newPassword"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PasswordAndCode"
      }
    },
    "PhoneAndCode": {
      "type": "object",
      "required": [
        "code",
        "newPhone"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "newPhone": {
          "type": "string"
        }
      },
      "xml": {
        "name": "PhoneAndCode"
      }
    },
    "UserMenuList": {
      "type": "object",
      "required": [
        "id",
        "typeName",
        "menuList",
        "remarks"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "typeName": {
          "type": "string"
        },
        "menuList": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/MenuListArray"
          }
        },
        "remarks": {
          "type": "string"
        }
      },
      "xml": {
        "name": "UserMenuList"
      }
    },
    "MenuListArray": {
      "type": "object",
      "required": [
        "label",
        "icon",
        "link",
        "children",
        "usable"
      ],
      "properties": {
        "label": {
          "type": "String"
        },
        "icon": {
          "type": "String"
        },
        "link": {
          "type": "String"
        },
        "children": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/ChildrenArray"
          }
        },
        "usable": {
          "type": "String"
        }
      },
      "xml": {
        "name": "MenuListArray"
      }
    },
    "ChildrenArray": {
      "type": "object",
      "required": [
        "link",
        "name",
        "usable"
      ],
      "properties": {
        "link": {
          "type": "String"
        },
        "name": {
          "type": "String"
        },
        "usable": {
          "type": "String"
        }
      },
      "xml": {
        "name": "ChildrenArray"
      }
    },
    "Brand": {
      "type": "object",
      "required": [
        "remark",
        "brandName"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "brandName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Brand"
      }
    },
    "BrandModel": {
      "type": "object",
      "required": [
        "remark",
        "brandModelName",
        "brandId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "brandModelName": {
          "type": "string"
        },
        "brandId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "BrandModel"
      }
    },
    "Category": {
      "type": "object",
      "required": [
        "remark",
        "categoryName"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "CategorySub": {
      "type": "object",
      "required": [
        "remark",
        "categorySubName",
        "categoryId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "categorySubName": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "CategorySub"
      }
    },
    "Storage": {
      "type": "object",
      "required": [
        "remark",
        "storageName"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Storage"
      }
    },
    "StorageArea": {
      "type": "object",
      "required": [
        "remark",
        "storageAreaName",
        "storageId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageAreaName": {
          "type": "string"
        },
        "storageId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "StorageArea"
      }
    },
    "StorageProductRel": {
      "type": "object",
      "required": [
        "remark",
        "storageAreaId",
        "supplierId",
        "productName",
        "purchaseId",
        "purchaseItemId",
        "unitCost",
        "storageCount",
        "orderId",
        "storageType",
        "storageSubType",
        "oldFlag"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageAreaId": {
          "type": "integer",
          "format": "int64"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "purchaseId": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseItemId": {
          "type": "integer",
          "format": "int64"
        },
        "unitCost": {
          "type": "integer",
          "format": "int64"
        },
        "storageCount": {
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "storageType": {
          "type": "integer",
          "format": "int64"
        },
        "storageSubType": {
          "type": "integer",
          "format": "int64"
        },
        "oldFlag": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "StorageProductRel"
      }
    },
    "StorageProductRelPut": {
      "type": "object",
      "required": [
        "remark"
      ],
      "properties": {
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "storageProductRelPut"
      }
    },
    "storageMoveInfo": {
      "type": "object",
      "required": [
        "remark",
        "moveCount",
        "moveStorageId",
        "moveStorageAreaId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "moveCount": {
          "type": "integer",
          "format": "int64"
        },
        "moveStorageId": {
          "type": "integer",
          "format": "int64"
        },
        "moveStorageAreaId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "storageMoveInfo"
      }
    },
    "storProdRelDetailImport": {
      "type": "object",
      "required": [
        "remark",
        "storageCount",
        "storageType",
        "storageSubType",
        "orderId",
        "orderProdId",
        "applyUserId",
        "oldFlag"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageCount": {
          "type": "integer",
          "format": "int64"
        },
        "storageType": {
          "type": "integer",
          "format": "int64"
        },
        "storageSubType": {
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "orderProdId": {
          "type": "integer",
          "format": "int64"
        },
        "applyUserId": {
          "type": "integer",
          "format": "int64"
        },
        "oldFlag": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "StorageProductRelDetail"
      }
    },
    "storProdRelDetailExport": {
      "type": "object",
      "required": [
        "remark",
        "storageCount",
        "storageType",
        "storageSubType",
        "orderId",
        "orderProdId",
        "applyUserId",
        "oldFlag"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageCount": {
          "type": "integer",
          "format": "int64"
        },
        "storageType": {
          "type": "integer",
          "format": "int64"
        },
        "storageSubType": {
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "orderProdId": {
          "type": "integer",
          "format": "int64"
        },
        "applyUserId": {
          "type": "integer",
          "format": "int64"
        },
        "oldFlag": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "storProdRelDetailExport"
      }
    },
    "StorageCheck": {
      "type": "object",
      "required": [
        "remark",
        "checkDesc",
        "storageId",
        "storageAreaId",
        "supplierId",
        "purchaseId",
        "purchaseItemId",
        "categoryId",
        "categorySubId",
        "brandId",
        "brandModelId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "checkDesc": {
          "type": "string"
        },
        "storageId": {
          "type": "integer",
          "format": "int64"
        },
        "storageAreaId": {
          "type": "integer",
          "format": "int64"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseId": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseItemId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "categorySubId": {
          "type": "integer",
          "format": "int64"
        },
        "brandId": {
          "type": "integer",
          "format": "int64"
        },
        "brandModelId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "StorageCheck"
      }
    },
    "StorageCheckPut": {
      "type": "object",
      "required": [
        "remark"
      ],
      "properties": {
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "StorageCheckPut"
      }
    },
    "StorageCheckRel": {
      "type": "object",
      "required": [
        "remark",
        "storageCheckId",
        "checkCount",
        "storageId",
        "storageAreaId",
        "storageDateId",
        "supplierId",
        "productId",
        "productName",
        "unitCost"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageCheckId": {
          "type": "integer",
          "format": "int64"
        },
        "checkCount": {
          "type": "integer",
          "format": "int64"
        },
        "storageId": {
          "type": "integer",
          "format": "int64"
        },
        "storageAreaId": {
          "type": "integer",
          "format": "int64"
        },
        "storageDateId": {
          "type": "integer",
          "format": "int64"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "unitCost": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "StorageCheckRel"
      }
    },
    "StorageCheckRelPut": {
      "type": "object",
      "required": [
        "remark",
        "checkCount"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "checkCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "StorageCheckRelPut"
      }
    },
    "Supplier": {
      "type": "object",
      "required": [
        "remark",
        "supplierName",
        "supplierType",
        "contactName",
        "email",
        "tel",
        "mobile",
        "fax",
        "address",
        "invoiceTitle",
        "invoiceBank",
        "invoiceBankSer",
        "invoiceAddress",
        "settleType",
        "settleMonthDay"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "supplierType": {
          "type": "integer",
          "format": "int64"
        },
        "contactName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "invoiceTitle": {
          "type": "string"
        },
        "invoiceBank": {
          "type": "string"
        },
        "invoiceBankSer": {
          "type": "string"
        },
        "invoiceAddress": {
          "type": "string"
        },
        "settleType": {
          "type": "integer",
          "format": "int64"
        },
        "settleMonthDay": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Supplier"
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "remark",
        "productName",
        "productSName",
        "productSerial",
        "productAddress",
        "categoryId",
        "categorySubId",
        "brandId",
        "brandModelId",
        "image",
        "standardType",
        "barcode",
        "unitName",
        "price"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productSName": {
          "type": "string"
        },
        "productSerial": {
          "type": "string"
        },
        "productAddress": {
          "type": "string"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "categorySubId": {
          "type": "integer",
          "format": "int64"
        },
        "brandId": {
          "type": "integer",
          "format": "int64"
        },
        "brandModelId": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        },
        "standardType": {
          "type": "integer",
          "format": "int64"
        },
        "barcode": {
          "type": "string"
        },
        "unitName": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Product"
      }
    },
    "Purchase": {
      "type": "object",
      "required": [
        "remark",
        "supplierId",
        "supplierName",
        "transferCostType",
        "transferCost",
        "totalCost",
        "orderId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "supplierName": {
          "type": "string"
        },
        "transferCostType": {
          "type": "integer",
          "format": "int64"
        },
        "transferCost": {
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchaseItem"
          }
        }
      },
      "xml": {
        "name": "Purchase"
      }
    },
    "PurchaseItem": {
      "type": "object",
      "required": [
        "remark",
        "productId",
        "productName",
        "unitCost",
        "purchaseCount"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "unitCost": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "PurchaseItem"
      }
    },
    "PurchasePut": {
      "type": "object",
      "required": [
        "remark",
        "transferCostType",
        "transferCost"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "transferCostType": {
          "type": "integer",
          "format": "int64"
        },
        "transferCost": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "PurchasePut"
      }
    },
    "PurchaseItemPut": {
      "type": "object",
      "required": [
        "remark",
        "unitCost",
        "purchaseCount"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "unitCost": {
          "type": "integer",
          "format": "int64"
        },
        "purchaseCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "PurchaseItemPut"
      }
    },
    "purchaseItemPutStorage": {
      "type": "object",
      "required": [
        "storageId",
        "storageAreaId",
        "storageCount",
        "remark"
      ],
      "properties": {
        "storageId": {
          "type": "integer",
          "format": "int64"
        },
        "storageAreaId": {
          "type": "integer",
          "format": "int64"
        },
        "storageCount": {
          "type": "integer",
          "format": "int64"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "purchaseItemPutStorage"
      }
    },
    "PurchaseRefund": {
      "type": "object",
      "required": [
        "remark",
        "supplierId",
        "productId",
        "productName",
        "storageType",
        "refundUnitCost",
        "refundCount",
        "transferCostType",
        "transferCost",
        "orderId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "supplierId": {
          "type": "integer",
          "format": "int64"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "storageType": {
          "type": "integer",
          "format": "int64"
        },
        "refundUnitCost": {
          "type": "integer",
          "format": "int64"
        },
        "refundCount": {
          "type": "integer",
          "format": "int64"
        },
        "transferCostType": {
          "type": "integer",
          "format": "int64"
        },
        "transferCost": {
          "type": "integer",
          "format": "int64"
        },
        "orderId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "PurchaseRefund"
      }
    },
    "PurchaseRefundPut": {
      "type": "object",
      "required": [
        "remark",
        "storageType",
        "refundUnitCost",
        "refundCount",
        "transferCostType",
        "transferCost"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "storageType": {
          "type": "integer",
          "format": "int64"
        },
        "refundUnitCost": {
          "type": "integer",
          "format": "int64"
        },
        "refundCount": {
          "type": "integer",
          "format": "int64"
        },
        "transferCostType": {
          "type": "integer",
          "format": "int64"
        },
        "transferCost": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "PurchaseRefundPut"
      }
    },
    "Client": {
      "type": "object",
      "required": [
        "remark",
        "name",
        "tel",
        "address",
        "clientSerial",
        "clientSerialDetail",
        "modelId",
        "modelName",
        "clientAgentId",
        "referUser",
        "sourceType"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "clientSerial": {
          "type": "string"
        },
        "clientSerialDetail": {
          "type": "string"
        },
        "modelId": {
          "type": "integer",
          "format": "int64"
        },
        "modelName": {
          "type": "string"
        },
        "clientAgentId": {
          "type": "integer",
          "format": "int64"
        },
        "referUser": {
          "type": "integer",
          "format": "int64"
        },
        "sourceType": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Client"
      }
    },
    "ClientPut": {
      "type": "object",
      "required": [
        "remark",
        "name",
        "tel",
        "address",
        "clientSerial",
        "clientSerialDetail",
        "modelId",
        "modelName",
        "clientAgentId"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "clientSerial": {
          "type": "string"
        },
        "clientSerialDetail": {
          "type": "string"
        },
        "modelId": {
          "type": "integer",
          "format": "int64"
        },
        "modelName": {
          "type": "string"
        },
        "clientAgentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "ClientPut"
      }
    },
    "ClientAgent": {
      "type": "object",
      "required": [
        "remark",
        "name",
        "clientType",
        "tel",
        "address",
        "idSerial",
        "salesUserId",
        "sourceType"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clientType": {
          "type": "integer",
          "format": "int64"
        },
        "tel": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "idSerial": {
          "type": "string"
        },
        "salesUserId": {
          "type": "integer",
          "format": "int64"
        },
        "sourceType": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "ClientAgent"
      }
    },
    "ClientAgentInvoice": {
      "type": "object",
      "required": [
        "remark",
        "invoiceType",
        "invoiceTitle",
        "invoiceBank",
        "invoiceBankSer",
        "invoiceAddress",
        "settleType"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "invoiceType": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceTitle": {
          "type": "string"
        },
        "invoiceBank": {
          "type": "string"
        },
        "invoiceBankSer": {
          "type": "string"
        },
        "invoiceAddress": {
          "type": "string"
        },
        "settleType": {
          "type": "string"
        }
      },
      "xml": {
        "name": "ClientAgentInvoice"
      }
    },
    "SaleService": {
      "type": "object",
      "required": [
        "remark",
        "serviceName",
        "serviceType",
        "servicePriceType",
        "fixedPrice",
        "unitPrice",
        "servicePriceCount",
        "serviceCostType",
        "fixedCost",
        "unitCost",
        "serviceCostCount",
        "totalPrice",
        "totalCost",
        "totalProfit",
        "salePerfType",
        "salePerfFixed",
        "salePerfRatio",
        "deployPerfType",
        "deployPerfFixed",
        "deployPerfRatio",
        "checkPerfType",
        "checkPerfFixed",
        "checkPerfRatio"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceType": {
          "type": "integer",
          "format": "int64"
        },
        "servicePriceType": {
          "type": "integer",
          "format": "int64"
        },
        "fixedPrice": {
          "type": "integer",
          "format": "int64"
        },
        "unitPrice": {
          "type": "integer",
          "format": "int64"
        },
        "servicePriceCount": {
          "type": "integer",
          "format": "int64"
        },
        "serviceCostType": {
          "type": "integer",
          "format": "int64"
        },
        "fixedCost": {
          "type": "integer",
          "format": "int64"
        },
        "unitCost": {
          "type": "integer",
          "format": "int64"
        },
        "serviceCostCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalPrice": {
          "type": "integer",
          "format": "int64"
        },
        "totalCost": {
          "type": "integer",
          "format": "int64"
        },
        "totalProfit": {
          "type": "integer",
          "format": "int64"
        },
        "salePerfType": {
          "type": "integer",
          "format": "int64"
        },
        "salePerfFixed": {
          "type": "integer",
          "format": "int64"
        },
        "salePerfRatio": {
          "type": "integer",
          "format": "int64"
        },
        "deployPerfType": {
          "type": "integer",
          "format": "int64"
        },
        "deployPerfFixed": {
          "type": "integer",
          "format": "int64"
        },
        "deployPerfRatio": {
          "type": "integer",
          "format": "int64"
        },
        "checkPerfType": {
          "type": "integer",
          "format": "int64"
        },
        "checkPerfFixed": {
          "type": "integer",
          "format": "int64"
        },
        "checkPerfRatio": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "SaleService"
      }
    },
    "SaleServiceProdRel": {
      "type": "object",
      "required": [
        "serviceName",
        "productName",
        "productCount"
      ],
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "SaleServiceProdRel"
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "reUserId",
        "reUserName",
        "clientRemark",
        "opRemark",
        "orderType",
        "clientId",
        "clientAgentId",
        "transferPrice",
        "OrderItemProdArray",
        "OrderItemServiceArray"
      ],
      "properties": {
        "reUserId": {
          "type": "integer",
          "format": "int64"
        },
        "reUserName": {
          "type": "string"
        },
        "clientRemark": {
          "type": "string"
        },
        "opRemark": {
          "type": "string"
        },
        "orderType": {
          "type": "integer",
          "format": "int64"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "clientAgentId": {
          "type": "integer",
          "format": "int64"
        },
        "transferPrice": {
          "type": "integer",
          "format": "int64"
        },
        "OrderItemProdArray": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/OrderItemProdArray"
          }
        },
        "OrderItemServiceArray": {
          "type": "array",
          "items":{
            "$ref": "#/definitions/OrderItemServiceArray"
          }
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "OrderPut": {
      "type": "object",
      "required": [
        "reUserId",
        "reUserName",
        "clientRemark",
        "opRemark"
      ],
      "properties": {
        "reUserId": {
          "type": "integer",
          "format": "int64"
        },
        "reUserName": {
          "type": "string"
        },
        "clientRemark": {
          "type": "string"
        },
        "opRemark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "OrderPut"
      }
    },
    "OrderItemProdArray": {
      "type": "object",
      "required": [
        "saleUserId",
        "saleUserName",
        "remark",
        "orderItemType",
        "prodId",
        "prodName",
        "prodCount",
        "discountProdPrice"
      ],
      "properties": {
        "saleUserId": {
          "type": "integer",
          "format": "int64"
        },
        "saleUserName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "orderItemType": {
          "type": "integer",
          "format": "int64"
        },
        "prodId": {
          "type": "integer",
          "format": "int64"
        },
        "prodName": {
          "type": "string"
        },
        "prodCount": {
          "type": "integer",
          "format": "int64"
        },
        "discountProdPrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemProdArray"
      }
    },
    "OrderItemProd": {
      "type": "object",
      "required": [
        "saleUserId",
        "saleUserName",
        "remark",
        "clientId",
        "clientAgentId",
        "orderItemType",
        "prodId",
        "prodName",
        "prodCount",
        "discountProdPrice"
      ],
      "properties": {
        "saleUserId": {
          "type": "integer",
          "format": "int64"
        },
        "saleUserName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "clientAgentId": {
          "type": "integer",
          "format": "int64"
        },
        "orderItemType": {
          "type": "integer",
          "format": "int64"
        },
        "prodId": {
          "type": "integer",
          "format": "int64"
        },
        "prodName": {
          "type": "string"
        },
        "prodCount": {
          "type": "integer",
          "format": "int64"
        },
        "discountProdPrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemProd"
      }
    },
    "OrderItemProdPut": {
      "type": "object",
      "required": [
        "remark",
        "prodCount",
        "discountProdPrice"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "prodCount": {
          "type": "integer",
          "format": "int64"
        },
        "discountProdPrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemProdPut"
      }
    },
    "OrderItemServiceArray": {
      "type": "object",
      "required": [
        "saleUserId",
        "saleUserName",
        "deployUserId",
        "deployUserName",
        "remark",
        "orderItemType",
        "saleServiceId",
        "saleServiceName",
        "discountServicePrice"
      ],
      "properties": {
        "saleUserId": {
          "type": "integer",
          "format": "int64"
        },
        "saleUserName": {
          "type": "string"
        },
        "deployUserId": {
          "type": "integer",
          "format": "int64"
        },
        "deployUserName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "orderItemType": {
          "type": "integer",
          "format": "int64"
        },
        "saleServiceId": {
          "type": "integer",
          "format": "int64"
        },
        "saleServiceName": {
          "type": "string"
        },
        "discountServicePrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemServiceArray"
      }
    },
    "OrderItemService": {
      "type": "object",
      "required": [
        "saleUserId",
        "saleUserName",
        "deployUserId",
        "deployUserName",
        "remark",
        "clientId",
        "clientAgentId",
        "orderItemType",
        "saleServiceId",
        "saleServiceName",
        "discountServicePrice"
      ],
      "properties": {
        "saleUserId": {
          "type": "integer",
          "format": "int64"
        },
        "saleUserName": {
          "type": "string"
        },
        "deployUserId": {
          "type": "integer",
          "format": "int64"
        },
        "deployUserName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "clientAgentId": {
          "type": "integer",
          "format": "int64"
        },
        "orderItemType": {
          "type": "integer",
          "format": "int64"
        },
        "saleServiceId": {
          "type": "integer",
          "format": "int64"
        },
        "saleServiceName": {
          "type": "string"
        },
        "discountServicePrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemService"
      }
    },
    "OrderItemServicePut": {
      "type": "object",
      "required": [
        "remark",
        "orderItemType",
        "discountServicePrice"
      ],
      "properties": {
        "remark": {
          "type": "string"
        },
        "orderItemType": {
          "type": "integer",
          "format": "int64"
        },
        "discountServicePrice": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "OrderItemServicePut"
      }
    },
    "OrderServiceDeploy": {
      "type": "object",
      "required": [
        "deployUserId",
        "deployUserName"
      ],
      "properties": {
        "deployUserId": {
          "type": "integer",
          "format": "int64"
        },
        "deployUserName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "OrderServiceDeploy"
      }
    },
    "OrderServiceCheck": {
      "type": "object",
      "required": [
        "checkUserId",
        "checkUserName"
      ],
      "properties": {
        "checkUserId": {
          "type": "integer",
          "format": "int64"
        },
        "checkUserName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "OrderServiceCheck"
      }
    },
    "App": {
      "type": "object",
      "required": [
        "appType",
        "deviceType",
        "version",
        "versionNum",
        "minVersionNum",
        "forceUpdate",
        "url",
        "remarks"
      ],
      "properties": {
        "appType": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "deviceType": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ]
        },
        "version": {
          "type": "string"
        },
        "versionNum": {
          "type": "integer",
          "format": "int64"
        },
        "minVersionNum": {
          "type": "integer",
          "format": "int64"
        },
        "forceUpdate": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string",
          "description": "pet status in the store"
        },
        "remarks": {
          "type": "string"
        }
      },
      "xml": {
        "name": "App"
      }
    },
    "Remark": {
      "type": "object",
      "required": [
        "remark"
      ],
      "properties": {
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Remark"
      }
    }
  }
}